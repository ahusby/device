name: build and push
on:
  push:
    branches:
      - master
    paths:
      - 'go.mod'
      - '**.go'
      - 'device-health-update/**/*.php'
      - 'device-health-update/composer.json'
      - 'device-health-update/composer.lock'
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5433:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@master
    - name: run tests
      run: |
        make run-integration-test
    - name: Prepare device-health-update scripts for packaging
      working-directory: ./device-health-update
      run: |
        composer install --prefer-dist --no-progress --no-suggest --no-ansi --no-dev
    - name: build
      run: |
        make linux
    - name: set version
      id: set_version
      run: |
          echo ::set-output name=version::$(date "+%Y-%m-%d")-$(git --no-pager log -1 --pretty=%h)
    - name: create release
      id: create_release
      uses: actions/create-release@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_version.outputs.version }}
        release_name: Release ${{ steps.set_version.outputs.version }}
        draft: false
        prerelease: false
    - name: upload apiserver binary
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/apiserver
        asset_name: apiserver
        asset_content_type: application/octet-stream

    - name: upload gateway-agent binary
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/gateway-agent
        asset_name: gateway-agent
        asset_content_type: application/octet-stream

    - name: upload prometheus-agent binary
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/prometheus-agent
        asset_name: prometheus-agent
        asset_content_type: application/octet-stream

    - name: upload update.phar archive
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./device-health-update/update.phar
        asset_name: update.phar
        asset_content_type: application/octet-stream

    - name: upload get-checks.phar archive
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./device-health-update/get-checks.phar
        asset_name: get-checks.phar
        asset_content_type: application/octet-stream
